import{S as m,i as _,d as h,s as f,v as g,p as v,y as w,q as P,r as b,z as j,l as u,x,g as y,I as E,A as S,O as p}from"../chunks/index.5def7181.js";const O="src/routes/subjects/[subject]/+page.svelte";function d(a){var s;let t,n=((s=a[0].post)==null?void 0:s.description)+"",c;const r={c:function(){t=v("p"),c=w(n),this.h()},l:function(e){t=P(e,"P",{});var i=b(t);c=j(i,n),i.forEach(u),this.h()},h:function(){x(t,O,5,0,89)},m:function(e,i){y(e,t,i),E(t,c)},p:function(e,[i]){var l;i&1&&n!==(n=((l=e[0].post)==null?void 0:l.description)+"")&&S(c,n)},i:p,o:p,d:function(e){e&&u(t)}};return h("SvelteRegisterBlock",{block:r,id:d.name,type:"component",source:"",ctx:a}),r}function q(a,t,n){let{$$slots:c={},$$scope:r}=t;g("Page",c,[]);let{data:s}=t;a.$$.on_mount.push(function(){s===void 0&&!("data"in t||a.$$.bound[a.$$.props.data])&&console.warn("<Page> was created without expected prop 'data'")});const o=["data"];return Object.keys(t).forEach(e=>{!~o.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Page> was created with unknown prop '${e}'`)}),a.$$set=e=>{"data"in e&&n(0,s=e.data)},a.$capture_state=()=>({data:s}),a.$inject_state=e=>{"data"in e&&n(0,s=e.data)},t&&"$$inject"in t&&a.$inject_state(t.$$inject),[s]}class R extends m{constructor(t){super(t),_(this,t,q,d,f,{data:0}),h("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:d.name})}get data(){throw new Error("<Page>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set data(t){throw new Error("<Page>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{R as default};
